services:
  redis:
    profiles:
      - Telemetry
    container_name: Redis
    hostname: Redis
    restart: unless-stopped
    image: redis:6.2.6
    # ports:
    #   - 6379:6379
    networks:
      - RedisNet
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  tempo:
    profiles:
      - Telemetry
    container_name: Tempo
    hostname: Tempo
    restart: unless-stopped
    image: grafana/tempo:main-a46ac6d
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./../config/tempo.yaml:/etc/tempo.yaml
      - TempoData:/var/tempo
    # ports:
    #   - ${TEMPO_JAEGER_PORT}:14268  # jaeger ingest
    #   - ${TEMPO_PORT}:3200   # tempo
    #   - ${TEMPO_GRPC}:9095 # tempo grpc
    #   - ${TEMPO_OTLP_GRCP}:4317  # otlp grpc
    #   - $TEMPO_OTLP_HTTP:4318  # otlp http
    #   - ${TEMPO_OTLP_ZIPKIN}:9411   # zipkin
    networks:
      - MicroservicesNet
      - RedisNet
    healthcheck:
      test: ["CMD", "wget", "--spider", "--no-verbose", "--tries=1", "http://Tempo:3200/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      - redis

  prometheus:
    profiles:
      - Telemetry
    container_name: Prometheus
    hostname: Prometheus
    restart: unless-stopped
    image: prom/prometheus:v2.54.1
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=14d
    volumes:
      - ./../config/prometheus.yaml:/etc/prometheus.yaml
      - PrometheusData:/prometheus
    networks:
      - MicroservicesNet
    # ports:
    #   - ${PROMETHEUS_PORT}:9090
    healthcheck:
      test: ["CMD", "wget", "--spider", "--no-verbose", "--tries=1", "http://Prometheus:9090/metrics"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  Loki:
    profiles:
      - Telemetry
    image: grafana/loki:2.9.0
    container_name: Loki
    hostname: Loki
    environment:
      TZ: Europe/Warsaw
    restart: unless-stopped
    command:
      -config.file=/etc/loki/loki.yaml
    volumes:
      - ./../config/loki.yaml:/etc/loki/loki.yaml
      - LokiData:/loki
    networks:
      - MicroservicesNet
    # ports:
    #   - 3100:3100
    healthcheck:
      test: ["CMD", "wget", "--spider", "--no-verbose", "--tries=1", "http://Loki:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  Promtail:
    profiles:
      - Telemetry
    image: grafana/promtail:2.9.0
    container_name: Promtail
    hostname: Promtail
    environment:
      TZ: Europe/Warsaw
    restart: unless-stopped
    command:
      -config.file=/etc/promtail/promtail.yaml
    volumes:
      - ./../config/promtail.yaml:/etc/promtail/promtail.yaml
      - AppProxyLog:/var/log/work/
    networks:
      - MicroservicesNet
    # ports:
    #   - 9080:9080
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/9080; exit $?;'"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s