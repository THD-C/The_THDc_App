events {

}
http {
  log_format json_combined escape=json '{'
        '"time_local":"$time_local",'
        '"server_name":"$server_name",'
        '"request_uri":"$request_uri",'
        '"request_method":"$request_method",'
        '"remote_addr":"$remote_addr",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_traceparent":"$http_traceparent",'
        '"http_referer":"$http_referer",'
        '"request_time":"$request_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status"'
    '}';

  access_log /var/log/nginx_access.log json_combined;

  server {
    listen 80;

    server_name thdc.tail8ec47f.ts.net thdc; # Tailscale VPN domain

    location / {
      return 301 $scheme://$server_name/en/home;
    }
    location ~* ^/(en|pl) {
      proxy_set_header X-App-Server "$server_name";
      proxy_pass http://Frontend;
    }

    location /api {
        proxy_pass http://Frontend_API:8000;
    }
    location /docs {
        proxy_pass http://Frontend_API:8000/docs;
    }
    location /openapi.json {
        proxy_pass http://Frontend_API:8000/openapi.json;
    }

    location /tempo {

      # Handle preflight OPTIONS requests
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "http://$server_name";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        add_header Access-Control-Allow-Credentials "true";
        return 204;
      }
      
      proxy_pass http://Tempo:4318/v1/traces;

      add_header Access-Control-Allow-Origin "http://$server_name";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      add_header Access-Control-Allow-Headers "Content-Type, Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }
  }
  server {
    listen 80;

    server_name App_Proxy;

    location /ready {
      return 200;
    }
  }
}